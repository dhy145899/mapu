<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hniu.mapu.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="UserResultMap" type="com.hniu.mapu.pojo.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="password" column="password"/>
        <result property="avatar" column="avatar"/>
        <result property="gender" column="gender"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="role" column="role"/>
        <result property="isEnabled" column="is_enabled"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="base_select">
        SELECT id, username, nickname, password, avatar, gender, phone, email, role, is_enabled, create_time, update_time
        FROM user
    </sql>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="UserResultMap">
        <include refid="base_select" />
        WHERE id = #{id}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultMap="UserResultMap">
        SELECT id, username, nickname, password, avatar, gender, phone, email, role, is_enabled, create_time, update_time
        FROM user
        WHERE username = #{username}
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAll" resultMap="UserResultMap">
        SELECT id, username, nickname, password, avatar, gender, phone, email, role, is_enabled, create_time, update_time
        FROM user
        ORDER BY create_time DESC
    </select>

    <!-- 插入用户 -->
    <insert id="insert">
        INSERT INTO user (id, username, nickname, password, avatar, gender, phone, email, role, is_enabled, create_time, update_time)
        VALUES (#{id}, #{username}, #{nickname}, #{password}, #{avatar}, #{gender}, #{phone}, #{email}, #{role}, #{isEnabled}, #{createTime}, #{updateTime})
    </insert>

    <!-- 更新用户 -->
    <update id="update">
        UPDATE user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="password != null">password = #{password},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="role != null">role = #{role},</if>
            <if test="isEnabled != null">is_enabled = #{isEnabled},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteById">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE user SET is_enabled = #{status}, update_time = NOW() WHERE id = #{id}
    </update>

    <!-- 搜索用户 -->
    <select id="searchUsers" resultMap="UserResultMap">
        SELECT id, username, nickname, password, avatar, gender, phone, email, role, is_enabled, create_time, update_time
        FROM user
        <where>
            <if test="keyword != null and keyword != ''">
                AND (username LIKE CONCAT('%', #{keyword}, '%') OR nickname LIKE CONCAT('%', #{keyword}, '%') OR email LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <!-- 获取用户总数 -->
    <select id="getTotalCount" resultType="long">
        SELECT COUNT(*) FROM user
    </select>

    <!-- 根据条件查询用户列表 -->
    <select id="findByConditions" resultMap="UserResultMap">
        <include refid="base_select" />
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="nickname != null and nickname != ''">
                AND nickname LIKE CONCAT('%', #{nickname}, '%')
            </if>
            <if test="email != null and email != ''">
                AND email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="role != null">
                AND role = #{role}
            </if>
            <if test="isEnabled != null">
                AND is_enabled = #{isEnabled}
            </if>
        </where>
        ORDER BY create_time DESC
        <if test="offset != null and size != null">
            LIMIT #{offset}, #{size}
        </if>
    </select>

    <!-- 根据条件统计用户数量 -->
    <select id="countByConditions" resultType="long">
        SELECT COUNT(*) FROM user
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="nickname != null and nickname != ''">
                AND nickname LIKE CONCAT('%', #{nickname}, '%')
            </if>
            <if test="email != null and email != ''">
                AND email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="role != null">
                AND role = #{role}
            </if>
            <if test="isEnabled != null">
                AND is_enabled = #{isEnabled}
            </if>
        </where>
    </select>

</mapper>