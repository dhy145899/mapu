<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hniu.mapu.mapper.ArticleFavoriteMapper">

	<!-- 结果映射 -->
	<resultMap id="ArticleFavoriteResultMap" type="com.hniu.mapu.pojo.entity.ArticleFavorite">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="article_id" property="articleId" />
		<result column="create_time" property="createTime" />
	</resultMap>

	<!-- 管理端结果映射（包含冗余字段） -->
	<resultMap id="FavoriteAdminResultMap" type="com.hniu.mapu.pojo.entity.ArticleFavorite" extends="ArticleFavoriteResultMap">
		<result property="username" column="favorite_username"/>
		<result property="articleTitle" column="article_title"/>
		<result property="articleAuthor" column="author_username"/>
	</resultMap>

	<!-- 详细结果映射（包含文章信息） -->
	<resultMap id="FavoriteDetailResultMap" type="com.hniu.mapu.pojo.entity.ArticleFavorite" extends="ArticleFavoriteResultMap">
		<!-- 文章信息 -->
		<association property="article" javaType="com.hniu.mapu.pojo.entity.Article">
			<id property="id" column="article_id"/>
			<result property="title" column="article_title"/>
			<result property="summary" column="article_summary"/>
			<result property="content" column="article_content"/>
			<result property="userId" column="article_user_id"/>
			<result property="categoryId" column="article_category_id"/>
			<result property="status" column="article_status"/>
			<result property="createTime" column="article_create_time"/>
			<result property="updateTime" column="article_update_time"/>
			<!-- 作者信息 -->
			<association property="author" javaType="com.hniu.mapu.pojo.entity.User">
				<id property="id" column="author_id"/>
				<result property="username" column="author_username"/>
				<result property="nickname" column="author_nickname"/>
				<result property="avatar" column="author_avatar"/>
			</association>
			<!-- 分类信息 -->
			<association property="category" javaType="com.hniu.mapu.pojo.entity.ArticleCategory">
				<id property="id" column="category_id"/>
				<result property="name" column="category_name"/>
			</association>
		</association>
	</resultMap>

	<!-- 查询用户是否已收藏文章 -->
	<select id="selectByUserAndArticle" resultMap="ArticleFavoriteResultMap">
		SELECT id, user_id, article_id, create_time
		FROM article_favorite
		WHERE user_id = #{userId} AND article_id = #{articleId}
	</select>

	<!-- 查询用户收藏的文章列表 -->
    <select id="selectByUserId" resultMap="FavoriteDetailResultMap">
		SELECT 
			f.id, f.user_id, f.article_id, f.create_time,
			a.title as article_title, a.summary as article_summary, a.content as article_content,
			a.user_id as article_user_id, a.category_id as article_category_id,
			a.status as article_status, a.create_time as article_create_time, 
			a.update_time as article_update_time, a.publish_time as article_publish_time,
			u.id as author_id, u.username as author_username, u.nickname as author_nickname, u.avatar as author_avatar,
			c.id as category_id, c.name as category_name
		FROM article_favorite f
		LEFT JOIN article a ON f.article_id = a.id
		LEFT JOIN user u ON a.user_id = u.id
		LEFT JOIN article_category c ON a.category_id = c.id
		WHERE f.user_id = #{userId}
		ORDER BY f.create_time DESC
	</select>

	<!-- 插入收藏记录 -->
	<insert id="insert" parameterType="com.hniu.mapu.pojo.entity.ArticleFavorite">
		INSERT INTO article_favorite (id, user_id, article_id, create_time)
		VALUES (#{id}, #{userId}, #{articleId}, #{createTime})
	</insert>

	<!-- 删除收藏记录 -->
	<delete id="deleteByUserAndArticle">
		DELETE FROM article_favorite 
		WHERE user_id = #{userId} AND article_id = #{articleId}
	</delete>

	<!-- 统计文章收藏数 -->
	<select id="countByArticleId" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM article_favorite WHERE article_id = #{articleId}
	</select>

	<!-- 获取收藏总数 -->
	<select id="getTotalCount" resultType="long">
		SELECT COUNT(*) FROM article_favorite
	</select>

	<!-- 根据条件查询收藏列表 -->
	<select id="findByConditions" resultMap="FavoriteAdminResultMap">
		SELECT 
			f.id, f.user_id, f.article_id, f.create_time,
			a.id as article_id, a.title as article_title, a.summary as article_summary, a.content as article_content,
			a.user_id as article_user_id, a.category_id as article_category_id, a.status as article_status,
			a.create_time as article_create_time, a.update_time as article_update_time,
			u.id as author_id, u.username as author_username, u.nickname as author_nickname, u.avatar as author_avatar,
			c.id as category_id, c.name as category_name,
			fu.username as favorite_username, fu.nickname as favorite_nickname
		FROM article_favorite f
		LEFT JOIN article a ON f.article_id = a.id
		LEFT JOIN user u ON a.user_id = u.id
		LEFT JOIN article_category c ON a.category_id = c.id
		LEFT JOIN user fu ON f.user_id = fu.id
		<where>
			<if test="username != null and username != ''">
				AND (fu.username LIKE CONCAT('%', #{username}, '%') OR fu.nickname LIKE CONCAT('%', #{username}, '%'))
			</if>
			<if test="articleTitle != null and articleTitle != ''">
				AND a.title LIKE CONCAT('%', #{articleTitle}, '%')
			</if>
			<if test="articleAuthor != null and articleAuthor != ''">
				AND (u.username LIKE CONCAT('%', #{articleAuthor}, '%') OR u.nickname LIKE CONCAT('%', #{articleAuthor}, '%'))
			</if>
		</where>
		ORDER BY f.create_time DESC
		<if test="offset != null and size != null">
			LIMIT #{offset}, #{size}
		</if>
	</select>

	<!-- 根据条件统计收藏数量 -->
    <select id="countByConditions" resultType="long">
        SELECT COUNT(*) FROM article_favorite f
        LEFT JOIN article a ON f.article_id = a.id
        LEFT JOIN user u ON a.user_id = u.id
        LEFT JOIN user fu ON f.user_id = fu.id
        <where>
            <if test="username != null and username != ''">
                AND (fu.username LIKE CONCAT('%', #{username}, '%') OR fu.nickname LIKE CONCAT('%', #{username}, '%'))
            </if>
            <if test="articleTitle != null and articleTitle != ''">
                AND a.title LIKE CONCAT('%', #{articleTitle}, '%')
            </if>
            <if test="articleAuthor != null and articleAuthor != ''">
                AND (u.username LIKE CONCAT('%', #{articleAuthor}, '%') OR u.nickname LIKE CONCAT('%', #{articleAuthor}, '%'))
            </if>
        </where>
    </select>
    
    <!-- 根据ID删除收藏记录 -->
    <delete id="deleteById">
        DELETE FROM article_favorite WHERE id = #{id}
    </delete>
    
    <!-- 批量删除收藏记录 -->
    <delete id="batchDeleteByIds">
        DELETE FROM article_favorite
        WHERE id IN
        <foreach collection="favoriteIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>